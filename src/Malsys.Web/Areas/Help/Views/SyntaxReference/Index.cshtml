@{
	ViewBag.Title = "Malsys syntax";
}




<h3>Malsys grammar</h3>

<h4 id="grammar-input">Input</h4>

<pre class="grammar">
input = input_statement*

input_statement =
	| empty_statement
	| constant_def
	| function_def
	| lsystem_def
</pre>

<p>Input of Malsys is list of following statements:</p>
<ul>
	<li>empty statement</li>
	<li>constant definition – global constant, can be used in any place after definition</li>
	<li>function definition – global function, can be used in any place after definition</li>
	<li>L-system definition</li>
</ul>


<h4 id="grammar-empty_statement">Empty statement</h4>

<pre class="grammar">
empty_statement = ';'
</pre>

<p>To <i>eat</i> redundant semicolons.</p>




<h4 id="grammar-lsystem_def">L-system definition</h4>



<h4 id="grammar-expression">Expression</h4>

<pre class="grammar">
expression = expr_member+

expr_member =
	| NUMBER
	| ID
	| OPERATOR
	| expr_indexer
	| expr_array
	| expr_function
	| '(' expression ')'

expr_indexer = '[' expression ']'

expr_array = '{' (expression (',' expression)*)? '}'

expr_function = ID '(' params_expr_list? ')'

params_expr_list = expression (',' params_expr_list)?
</pre>

<p>
	Expression grammar is not strict, correctness of expression will ensure compiler or interpreter.
</p>
