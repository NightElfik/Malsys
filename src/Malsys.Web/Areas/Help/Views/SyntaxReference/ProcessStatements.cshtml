@model Malsys.Web.Models.Lsystem.SimpleLsystemProcessor

@{
	ViewBag.Title = "Process statements";
	var exampleModel = new LsystemExampleViewModel() {
		LsystemProcessor = Model,
		SourceCodeTemplate = StringHelper.JoinLines("// process statements example {0:00}", "{1}"),
		UnimportantLines = new int[] { 1 }

	};
	var lsystemStr = StringHelper.JoinLines(
		"lsystem {0} {{",
		"set symbols axiom = {0};",
		"}}");
	int exampleId = 1;
}

<h2>Process statements</h2>

<p>
	Process statement defines processing of L-system with process configuration.
</p>

<div id="toc"></div>

@* ================================================================================================================== *@
<h3>Basic process statement</h3>

<p>
	Basic syntax of process statement is <code class="malsys">process LsystemName with ConfigurationName;</code>
		where <code>LsystemName</code> is name of processed L-system and <code>ConfigurationName</code> is name of used process configuration.
	There are @Html.ActionLink("predefined process configurations", MVC.Help.Predefined.Configurations()) that can be used right away.
	One of them is <code>SymbolPrinter</code> which will print all symbols of L-system.
</p>

@Html.Partial(MVC.Help.Shared.Views.LsystemExamplePartial, exampleModel.WithArgs(exampleId++, StringHelper.JoinLines(
		lsystemStr.Fmt("LsystemA"),
		"process LsystemA with SymbolPrinter;")))


@* ================================================================================================================== *@
<h3>Processing all defined L-systems</h3>

<p>
	If there are more L-systems and we want to render them all we can write one process statement for each L-system or we can just use <code class="malsys">all</code>
		to process all defined (@Html.AnchorLink("non-abstract", MVC.Help.SyntaxReference.LsystemDefinition(), "AbstractLsystems")) L-systems.
</p>

@Html.Partial(MVC.Help.Shared.Views.LsystemExamplePartial, exampleModel.WithArgs(exampleId++, StringHelper.JoinLines(
		"abstract " + lsystemStr.Fmt("LsystemA"),
		lsystemStr.Fmt("LsystemB"),
		lsystemStr.Fmt("LsystemC"),
		"process all with SymbolPrinter;")))


@* ================================================================================================================== *@
<h3>Passing arguments to processed L-systems</h3>

<p>
	If L-system has some parameters it is possible to pass arguments to them with process statement.
</p>

@Html.Partial(MVC.Help.Shared.Views.LsystemExamplePartial, exampleModel.WithArgs(exampleId++, StringHelper.JoinLines(
		"lsystem ParameterizedLsystem(x = 0, i = 1) {",
		"set symbols axiom = A;",
		"set iterations = i;",
		"rewrite A to X(x) A;",
		"}",
		"process ParameterizedLsystem(5, 5) with SymbolPrinter;",
		"process ParameterizedLsystem(4) with SymbolPrinter;",
		"process all(2, 2) with SymbolPrinter;",
		"process ParameterizedLsystem with SymbolPrinter;")))


@* ================================================================================================================== *@
<h3>Specifying components for containers</h3>

<p>
	<i>To be done in the near future.</i>
</p>


@* ================================================================================================================== *@
<h3>Formal grammar</h3>

@MalsysHelper.GrammarBox(
	"process_statement = 'process' name params? 'with' ID use_components* ';'",
	"",
	"name = 'all' | ID",
	"",
	"params = '(' ( expression (',' expression)+ )? ')'",
	"",
	"use_components = 'use' ID 'as' ID")