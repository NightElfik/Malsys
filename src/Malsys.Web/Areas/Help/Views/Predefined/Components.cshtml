@model IEnumerable<ComponentModel>

@{
	ViewBag.Title = "Components and interfaces (containers)";
	string defaultCategory = "Other";
	var componentsGroupped = Model
		.Where(c => c.Metadata.IsInstantiable)
		.OrderBy(c => c.Metadata.HumanReadableName)
		.GroupBy(x => string.IsNullOrEmpty(x.Metadata.GroupDoc) ? defaultCategory : x.Metadata.GroupDoc)
		.OrderBy(x => x.Key);
	var interfacesGroupped = Model
		.Where(c => !c.Metadata.IsInstantiable)
		.OrderBy(c => c.Metadata.HumanReadableName)
		.GroupBy(x => string.IsNullOrEmpty(x.Metadata.GroupDoc) ? defaultCategory : x.Metadata.GroupDoc)
		.OrderBy(x => x.Key);
}

<h2>Components and interfaces (containers)</h2>

<p>
	This page contains list of all Components and interfaces (containers) along with theirs comprehensive information.
</p>

<div class="clearfix" id="toc">
	<div class="leftHalf">
		<h3>Components</h3>
		<ul class="clean">
		@foreach (var group in componentsGroupped) {
			<li>@group.Key
				<ul class="clean">
				@foreach (var component in group) {
					<li>@Url.AnchorLink(component.Metadata.HumanReadableName, MVC.Help.Predefined.Components(), component.Metadata.ComponentType.FullName)</li>
				}
				</ul>
			</li>
		}
		</ul>
	</div>

	<div class="rightHalf">
		<h3>Interfaces (containers)</h3>
		<ul class="clean">
		@foreach (var group in interfacesGroupped) {
			<li>@group.Key
				<ul class="clean">
				@foreach (var container in group) {
					<li>@Url.AnchorLink(container.Metadata.HumanReadableName, MVC.Help.Predefined.Components(), container.Metadata.ComponentType.FullName)</li>
				}
				</ul>
			</li>
		}
		</ul>
	</div>
</div>


<h2>Components</h2>
@foreach (var group in componentsGroupped) {
	<h3>@group.Key</h3>

	foreach (var comp in group) {
		Html.RenderPartial(MVC.Help.Shared.Views.ComponentPartial, comp);
		@MalsysHelper.TocLink();
	}

}

<h2>Interfaces (containers)</h2>
@foreach (var group in interfacesGroupped) {
	<h3>@group.Key</h3>

	foreach (var comp in group) {
		Html.RenderPartial(MVC.Help.Shared.Views.ComponentPartial, comp);
		@MalsysHelper.TocLink(true);
	}

}

@Html.ValidationSummary(false)