// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Malsys.Web.Controllers
{
    public partial class DiscussionController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected DiscussionController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult NewMessage()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.NewMessage);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult NewThread()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.NewThread);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Thread()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Thread);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AutoThreadInline()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AutoThreadInline);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DeleteThread()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteThread);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DeleteMessage()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteMessage);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult LockThread()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.LockThread);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public DiscussionController Actions { get { return MVC.Discussion; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Discussion";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Discussion";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string Category = "Category";
            public readonly string NewMessage = "NewMessage";
            public readonly string NewThread = "NewThread";
            public readonly string Thread = "Thread";
            public readonly string AutoThreadInline = "AutoThreadInline";
            public readonly string DeleteThread = "DeleteThread";
            public readonly string DeleteMessage = "DeleteMessage";
            public readonly string LockThread = "LockThread";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string Category = "Category";
            public const string NewMessage = "NewMessage";
            public const string NewThread = "NewThread";
            public const string Thread = "Thread";
            public const string AutoThreadInline = "AutoThreadInline";
            public const string DeleteThread = "DeleteThread";
            public const string DeleteMessage = "DeleteMessage";
            public const string LockThread = "LockThread";
        }


        static readonly ActionParamsClass_Category s_params_Category = new ActionParamsClass_Category();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Category CategoryParams { get { return s_params_Category; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Category
        {
            public readonly string id = "id";
            public readonly string page = "page";
        }
        static readonly ActionParamsClass_NewMessage s_params_NewMessage = new ActionParamsClass_NewMessage();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_NewMessage NewMessageParams { get { return s_params_NewMessage; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_NewMessage
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_NewThread s_params_NewThread = new ActionParamsClass_NewThread();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_NewThread NewThreadParams { get { return s_params_NewThread; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_NewThread
        {
            public readonly string threadModel = "threadModel";
        }
        static readonly ActionParamsClass_Thread s_params_Thread = new ActionParamsClass_Thread();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Thread ThreadParams { get { return s_params_Thread; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Thread
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_AutoThreadInline s_params_AutoThreadInline = new ActionParamsClass_AutoThreadInline();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AutoThreadInline AutoThreadInlineParams { get { return s_params_AutoThreadInline; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AutoThreadInline
        {
            public readonly string threadName = "threadName";
            public readonly string threadTitle = "threadTitle";
            public readonly string category = "category";
        }
        static readonly ActionParamsClass_DeleteThread s_params_DeleteThread = new ActionParamsClass_DeleteThread();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeleteThread DeleteThreadParams { get { return s_params_DeleteThread; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeleteThread
        {
            public readonly string id = "id";
            public readonly string returnUrl = "returnUrl";
            public readonly string yes = "yes";
        }
        static readonly ActionParamsClass_DeleteMessage s_params_DeleteMessage = new ActionParamsClass_DeleteMessage();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeleteMessage DeleteMessageParams { get { return s_params_DeleteMessage; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeleteMessage
        {
            public readonly string id = "id";
            public readonly string returnUrl = "returnUrl";
            public readonly string yes = "yes";
        }
        static readonly ActionParamsClass_LockThread s_params_LockThread = new ActionParamsClass_LockThread();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_LockThread LockThreadParams { get { return s_params_LockThread; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_LockThread
        {
            public readonly string id = "id";
            public readonly string returnUrl = "returnUrl";
            public readonly string yes = "yes";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string AddMessagePartial = "AddMessagePartial";
                public readonly string AutoThreadInline = "AutoThreadInline";
                public readonly string Category = "Category";
                public readonly string DeleteMessage = "DeleteMessage";
                public readonly string DeleteThread = "DeleteThread";
                public readonly string Index = "Index";
                public readonly string LockThread = "LockThread";
                public readonly string MessagePartial = "MessagePartial";
                public readonly string Thread = "Thread";
            }
            public readonly string AddMessagePartial = "~/Views/Discussion/AddMessagePartial.cshtml";
            public readonly string AutoThreadInline = "~/Views/Discussion/AutoThreadInline.cshtml";
            public readonly string Category = "~/Views/Discussion/Category.cshtml";
            public readonly string DeleteMessage = "~/Views/Discussion/DeleteMessage.cshtml";
            public readonly string DeleteThread = "~/Views/Discussion/DeleteThread.cshtml";
            public readonly string Index = "~/Views/Discussion/Index.cshtml";
            public readonly string LockThread = "~/Views/Discussion/LockThread.cshtml";
            public readonly string MessagePartial = "~/Views/Discussion/MessagePartial.cshtml";
            public readonly string Thread = "~/Views/Discussion/Thread.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_DiscussionController : Malsys.Web.Controllers.DiscussionController
    {
        public T4MVC_DiscussionController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void CategoryOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int? id, int? page);

        [NonAction]
        public override System.Web.Mvc.ActionResult Category(int? id, int? page)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Category);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "page", page);
            CategoryOverride(callInfo, id, page);
            return callInfo;
        }

        [NonAction]
        partial void NewMessageOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Malsys.Web.Models.NewDiscusMessageModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult NewMessage(Malsys.Web.Models.NewDiscusMessageModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.NewMessage);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            NewMessageOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void NewThreadOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Malsys.Web.Models.NewDiscusThreadModel threadModel);

        [NonAction]
        public override System.Web.Mvc.ActionResult NewThread(Malsys.Web.Models.NewDiscusThreadModel threadModel)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.NewThread);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "threadModel", threadModel);
            NewThreadOverride(callInfo, threadModel);
            return callInfo;
        }

        [NonAction]
        partial void ThreadOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ActionResult Thread(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Thread);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ThreadOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void AutoThreadInlineOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string threadName, string threadTitle, Malsys.Web.Models.DiscussionCategory category);

        [NonAction]
        public override System.Web.Mvc.ActionResult AutoThreadInline(string threadName, string threadTitle, Malsys.Web.Models.DiscussionCategory category)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AutoThreadInline);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "threadName", threadName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "threadTitle", threadTitle);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "category", category);
            AutoThreadInlineOverride(callInfo, threadName, threadTitle, category);
            return callInfo;
        }

        [NonAction]
        partial void DeleteThreadOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string returnUrl);

        [NonAction]
        public override System.Web.Mvc.ActionResult DeleteThread(int id, string returnUrl)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteThread);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "returnUrl", returnUrl);
            DeleteThreadOverride(callInfo, id, returnUrl);
            return callInfo;
        }

        [NonAction]
        partial void DeleteThreadOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string returnUrl, string yes);

        [NonAction]
        public override System.Web.Mvc.ActionResult DeleteThread(int id, string returnUrl, string yes)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteThread);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "returnUrl", returnUrl);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "yes", yes);
            DeleteThreadOverride(callInfo, id, returnUrl, yes);
            return callInfo;
        }

        [NonAction]
        partial void DeleteMessageOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string returnUrl);

        [NonAction]
        public override System.Web.Mvc.ActionResult DeleteMessage(int id, string returnUrl)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteMessage);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "returnUrl", returnUrl);
            DeleteMessageOverride(callInfo, id, returnUrl);
            return callInfo;
        }

        [NonAction]
        partial void DeleteMessageOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string returnUrl, string yes);

        [NonAction]
        public override System.Web.Mvc.ActionResult DeleteMessage(int id, string returnUrl, string yes)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteMessage);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "returnUrl", returnUrl);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "yes", yes);
            DeleteMessageOverride(callInfo, id, returnUrl, yes);
            return callInfo;
        }

        [NonAction]
        partial void LockThreadOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string returnUrl);

        [NonAction]
        public override System.Web.Mvc.ActionResult LockThread(int id, string returnUrl)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.LockThread);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "returnUrl", returnUrl);
            LockThreadOverride(callInfo, id, returnUrl);
            return callInfo;
        }

        [NonAction]
        partial void LockThreadOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string returnUrl, string yes);

        [NonAction]
        public override System.Web.Mvc.ActionResult LockThread(int id, string returnUrl, string yes)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.LockThread);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "returnUrl", returnUrl);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "yes", yes);
            LockThreadOverride(callInfo, id, returnUrl, yes);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591
