@{
	ViewBag.Title = "Tilings";
	ViewBag.MainClass = "twoColumns";
}

<h2>Tilings</h2>

<div class="floating_container clearfix">


<div class="floating_box">
<pre class="malsys box">
/**
 * http://en.wikipedia.org/wiki/Penrose_tiling
 */
lsystem PenroseTiling {

	set axiom = [N] + + [N] + + [N] + + [N] + + [N];
	let iterations = 4;
	let reversePolygonOrder = true;

	let darkClr = #221166;  // dark blue
	let lightClr = #FFCC66;  // dark yellow

	interpret M N O P as MoveForward(40);
	interpret + as TurnLeft(36);
	interpret ++ as TurnLeft(36 * 4);
	interpret - as TurnLeft(-36);
	interpret -- as TurnLeft(-36 * 4);
	interpret [ as StartBranch;
	interpret ] as EndBranch;
	interpret < as StartPolygon(0, 2, #000000);
	interpret . as RecordPolygonVertex;
	interpret > as EndPolygon;

	rewrite M
		to O + + <(darkClr) . P . -- N . [ - O . -- M . > ] + +;
	rewrite N
		to + <(lightClr) . O . - -  P . [ - - - M . - - N . > ] +;
	rewrite O
		to - <(lightClr) . M . + +  N . [ + + + O . + + P . > ] -;
	rewrite P
		to - - <(darkClr) . O . ++ M . [ + P . ++ N . > ] - - N;

	process with SvgRenderer;

}
</pre>
</div>

<div class="floating_box">
<pre class="malsys box">
/**
 * by Herb Savage
 * based on Martin Gardner's "Penrose Tiles to Trapdoor Ciphers"
 */
lsystem Sphinx {

	set axiom = x;
	let iterations = 5;

	interpret F G as DrawLine(5);
	interpret + as TurnLeft(60);
	interpret - as TurnLeft(-60);
	interpret | as TurnLeft(180);

	rewrite x to + F F - y F F + F F - - F F F
		| x | F - - y F F F y F F F |;
	rewrite y to - F F + x F F - F F + + F F F
		| y | F + + x F F F x F F F |;
	rewrite F to G G;
	rewrite G to G G;

	process with SvgRenderer;

}
</pre>
</div>


</div>