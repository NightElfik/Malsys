@model GalleryThumbnailModel

@using Malsys.Processing;
@using Malsys.Web.Models.Lsystem;

@{
	var metadata = OutputMetadataHelper.DeserializeMetadata(Model.SavedInput.OutputMetadata);

	HtmlString linkStrBegin = new HtmlString("<a href=\"" + Url.Action(MVC.Gallery.Detail(Model.SavedInput.UrlId)) + "\">");
	HtmlString linkStrEnd = new HtmlString("</a>");

	Model.NeedsThreeJs = false;
}

<div class="thn">
@linkStrBegin

@switch (Model.SavedInput.MimeType) {

	case MimeType.Image.SvgXml:
		int width = OutputMetadataHelper.TryGetValue(metadata, OutputMetadataKeyHelper.OutputWidth, -1);
		int height = OutputMetadataHelper.TryGetValue(metadata, OutputMetadataKeyHelper.OutputHeight, -1);
		bool hasValidSize = width > 0 && height > 0;
		if (hasValidSize) {
			MathHelper.ScaleSizeToFit(ref width, ref height, Model.MaxWidth, Model.MaxHeight);
		}
		else {
			height = Model.MaxHeight;
		}
		<img src="@Url.Action(MVC.Gallery.GetThumbnail(Model.SavedInput.UrlId))" @if (width > 0) { <text>width="@(width)px" </text> } height="@(height)px" alt="Thumbnail of @Model.SavedInput.PublishName" />
		break;

	case MimeType.Application.Json:
		Model.NeedsThreeJs = true;
		<div class="threeJsScene" data-scene="@Url.Action(MVC.Gallery.GetThumbnail(Model.SavedInput.UrlId))" data-clear-color="FFFFFF" data-anti-alias="false"></div>
		break;

		default:
			<p>Thumbnail for this type of output is not supported</p>
			break;

}

@linkStrEnd
</div>