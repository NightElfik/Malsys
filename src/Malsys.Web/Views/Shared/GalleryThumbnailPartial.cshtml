@**
 * Copyright © 2012 Marek Fišer [malsys@marekfiser.cz]
 * All rights reserved.
 *@
@model GalleryThumbnailModel

@using Malsys.Processing;
@using Malsys.Web.Models.Lsystem;

@{
	var metadata = OutputMetadataHelper.DeserializeMetadata(Model.SavedInput.OutputThnMetadata);

	HtmlString linkStrBegin = new HtmlString("<a href=\"" + Url.Action(MVC.Gallery.Detail(Model.SavedInput.UrlId))
		+ "\" title=\"" + Model.SavedInput.PublishName + " \">");
	HtmlString linkStrEnd = new HtmlString("</a>");
	
	HtmlString content;
	
	switch (Model.SavedInput.MimeType) {

	case MimeType.Image.SvgXml:
		int svgWidth = OutputMetadataHelper.TryGetValue(metadata, OutputMetadataKeyHelper.OutputWidth, -1);
		int svgHeight = OutputMetadataHelper.TryGetValue(metadata, OutputMetadataKeyHelper.OutputHeight, -1);
		bool svgHasValidSize = svgWidth > 0 && svgHeight > 0;
		if (svgHasValidSize) {
			MathHelper.ScaleSizeToFit(ref svgWidth, ref svgHeight, Model.MaxWidth, Model.MaxHeight);
		}
		else {
			svgHeight = Model.MaxHeight;
		}
		content = new HtmlString("<img src=\"{0}\" {1} height=\"{2}px\" alt=\"{3}\" />".FmtInvariant(			
			Url.Action(MVC.Gallery.GetThumbnail(Model.SavedInput.UrlId, Model.SavedInput.EditDate.Hash())),
			svgWidth > 0 ? "width=\"" + svgWidth + "px\"" : "",
			svgHeight,
			Model.SavedInput.PublishName));
		break;

	case MimeType.Image.Png:
	case MimeType.Image.Jpeg:
	case MimeType.Image.Gif:
		int bmpWidth = OutputMetadataHelper.TryGetValue(metadata, OutputMetadataKeyHelper.OutputWidth, -1);
		int bmpHeight = OutputMetadataHelper.TryGetValue(metadata, OutputMetadataKeyHelper.OutputHeight, -1);
		bool bmpHasValidSize = bmpWidth > 0 && bmpHeight > 0;
		if (bmpHasValidSize) {
			MathHelper.ScaleSizeToFit(ref bmpWidth, ref bmpHeight, Model.MaxWidth, Model.MaxHeight);
		}
		else {
			bmpHeight = Model.MaxHeight;
		}
		content = new HtmlString("<img src=\"{0}\" {1} height=\"{2}px\" alt=\"{3}\" />".FmtInvariant(			
			Url.Action(MVC.Gallery.GetThumbnail(Model.SavedInput.UrlId, Model.SavedInput.EditDate.Hash())),
			bmpWidth > 0 ? "width=\"" + bmpWidth + "px\"" : "",
			bmpHeight,
			Model.SavedInput.PublishName));
		break;

	case MimeType.Application.Zip:
		string objMeta = OutputMetadataHelper.TryGetValue(metadata, OutputMetadataKeyHelper.ObjMetadata, "");
		if (string.IsNullOrWhiteSpace(objMeta)) {
			goto default;  // Unknown ZIP archive
		}

		content = new HtmlString("<div class=\"threeJsScene\" data-url=\"{0}\"><p>Loading...</p></div>".FmtInvariant(
			@Url.Action(MVC.Gallery.GetThumbnail(Model.SavedInput.UrlId, Model.SavedInput.EditDate.Hash()))));
		 
		StaticHtml.RequireScript(Links.Js.ThreeJs.Three_js, LoadingOrder.Default);
		StaticHtml.RequireScript(Links.Js.ThreeJs.Detector_js, LoadingOrder.Default);
		StaticHtml.RequireScript(Links.Js.ThreeJs.Stats_js, LoadingOrder.Default);
		StaticHtml.RequireScript(Links.Js.ThreeJs.TrackballControls_js, LoadingOrder.Default);
		StaticHtml.RequireScript(Links.Js.ThreeJs.MTLLoader_js, LoadingOrder.Default);
		StaticHtml.RequireScript(Links.Js.ThreeJs.OBJMTLLoader_js, LoadingOrder.Default);
		StaticHtml.RequireScript(Links.Js.ThreeJs.Malsys_three_js, LoadingOrder.Default);
		break;

	default:
		content = new HtmlString(("<div style=\"width: {0}px; height: {1}px;\"><div class=\"clearfix\"><p>{2}</p>"
				+ "<p>Thumbnail for this type of output is not supported. Please click to see the output.</p></div></div>").FmtInvariant(
			Model.MaxWidth / 3,
			Model.MaxHeight,
			Model.SavedInput.PublishName));			
		
		break;

	}
	
}

<div class="thn">@linkStrBegin@content@linkStrEnd</div>