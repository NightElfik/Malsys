// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public static partial class MVC
{
    static readonly AdministrationClass s_Administration = new AdministrationClass();
    public static AdministrationClass Administration { get { return s_Administration; } }
    static readonly DocumentationClass s_Documentation = new DocumentationClass();
    public static DocumentationClass Documentation { get { return s_Documentation; } }
    public static Malsys.Web.Controllers.AccountController Account = new Malsys.Web.Controllers.T4MVC_AccountController();
    public static Malsys.Web.Controllers.ApiController Api = new Malsys.Web.Controllers.T4MVC_ApiController();
    public static Malsys.Web.Controllers.AuthenticationController Authentication = new Malsys.Web.Controllers.T4MVC_AuthenticationController();
    public static Malsys.Web.Controllers.CurveDesignerController CurveDesigner = new Malsys.Web.Controllers.T4MVC_CurveDesignerController();
    public static Malsys.Web.Controllers.DevDiaryController DevDiary = new Malsys.Web.Controllers.T4MVC_DevDiaryController();
    public static Malsys.Web.Controllers.FeedbackController Feedback = new Malsys.Web.Controllers.T4MVC_FeedbackController();
    public static Malsys.Web.Controllers.GalleryController Gallery = new Malsys.Web.Controllers.T4MVC_GalleryController();
    public static Malsys.Web.Controllers.HomeController Home = new Malsys.Web.Controllers.T4MVC_HomeController();
    public static Malsys.Web.Controllers.PermalinkController Permalink = new Malsys.Web.Controllers.T4MVC_PermalinkController();
    public static Malsys.Web.Controllers.ProcessController Process = new Malsys.Web.Controllers.T4MVC_ProcessController();
    public static Malsys.Web.Controllers.ProcessOutputController ProcessOutput = new Malsys.Web.Controllers.T4MVC_ProcessOutputController();
    public static Malsys.Web.Controllers.UserController User = new Malsys.Web.Controllers.T4MVC_UserController();
    public static T4MVC.SharedController Shared = new T4MVC.SharedController();
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class AdministrationClass
    {
        public readonly string Name = "Administration";
        public Malsys.Web.Areas.Administration.Controllers.HomeController Home = new Malsys.Web.Areas.Administration.Controllers.T4MVC_HomeController();
        public Malsys.Web.Areas.Administration.Controllers.RolesController Roles = new Malsys.Web.Areas.Administration.Controllers.T4MVC_RolesController();
        public Malsys.Web.Areas.Administration.Controllers.StatsController Stats = new Malsys.Web.Areas.Administration.Controllers.T4MVC_StatsController();
        public Malsys.Web.Areas.Administration.Controllers.TagsController Tags = new Malsys.Web.Areas.Administration.Controllers.T4MVC_TagsController();
        public Malsys.Web.Areas.Administration.Controllers.UsersController Users = new Malsys.Web.Areas.Administration.Controllers.T4MVC_UsersController();
    }
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class DocumentationClass
    {
        public readonly string Name = "Documentation";
        public Malsys.Web.Areas.Documentation.Controllers.ApiController Api = new Malsys.Web.Areas.Documentation.Controllers.T4MVC_ApiController();
        public Malsys.Web.Areas.Documentation.Controllers.ArticlesController Articles = new Malsys.Web.Areas.Documentation.Controllers.T4MVC_ArticlesController();
        public Malsys.Web.Areas.Documentation.Controllers.HomeController Home = new Malsys.Web.Areas.Documentation.Controllers.T4MVC_HomeController();
        public Malsys.Web.Areas.Documentation.Controllers.PredefinedController Predefined = new Malsys.Web.Areas.Documentation.Controllers.T4MVC_PredefinedController();
        public Malsys.Web.Areas.Documentation.Controllers.SyntaxReferenceController SyntaxReference = new Malsys.Web.Areas.Documentation.Controllers.T4MVC_SyntaxReferenceController();
        public T4MVC.Documentation.SharedController Shared = new T4MVC.Documentation.SharedController();
    }
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class Dummy
    {
        private Dummy() { }
        public static Dummy Instance = new Dummy();
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ActionResult : System.Web.Mvc.ActionResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ActionResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
     
    public override void ExecuteResult(System.Web.Mvc.ControllerContext context) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ViewResult : System.Web.Mvc.ViewResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ViewResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}



namespace Links
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Download {
        public const string URLPATH = "~/Download";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        public static readonly string MarekFiser_LsystemsOnline_v101_pdf = Url("MarekFiser-LsystemsOnline.v101.pdf");
        public static readonly string MarekFiser_LsystemsOnline_v101_pdf_zip = Url("MarekFiser-LsystemsOnline.v101.pdf.zip");
        public static readonly string Png_v1_zip = Url("Png-v1.zip");
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Css {
        public const string URLPATH = "~/Css";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        public static readonly string normalize_less_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/normalize.less.min.css") ? Url("normalize.less.min.css") : Url("normalize.less.css");
             
        public static readonly string prettyPhoto_less_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/prettyPhoto.less.min.css") ? Url("prettyPhoto.less.min.css") : Url("prettyPhoto.less.css");
             
        public static readonly string style_less_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/style.less.min.css") ? Url("style.less.min.css") : Url("style.less.css");
             
        public static readonly string unsemantic_less_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/unsemantic.less.min.css") ? Url("unsemantic.less.min.css") : Url("unsemantic.less.css");
             
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Js {
        public const string URLPATH = "~/Js";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        public static readonly string jquery_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.min.js") ? Url("jquery.min.js") : Url("jquery.js");
        public static readonly string jquery_prettyPhoto_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.prettyPhoto.min.js") ? Url("jquery.prettyPhoto.min.js") : Url("jquery.prettyPhoto.js");
        public static readonly string jquery_textarea_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.textarea.min.js") ? Url("jquery.textarea.min.js") : Url("jquery.textarea.js");
        public static readonly string jquery_tmpl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.tmpl.min.js") ? Url("jquery.tmpl.min.js") : Url("jquery.tmpl.js");
        public static readonly string jquery_unobtrusive_ajax_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.unobtrusive-ajax.min.js") ? Url("jquery.unobtrusive-ajax.min.js") : Url("jquery.unobtrusive-ajax.js");
        public static readonly string jquery_validate_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.min.js") ? Url("jquery.validate.min.js") : Url("jquery.validate.js");
        public static readonly string jquery_validate_unobtrusive_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.unobtrusive.min.js") ? Url("jquery.validate.unobtrusive.min.js") : Url("jquery.validate.unobtrusive.js");
        public static readonly string malsys_curveDesigner_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/malsys.curveDesigner.min.js") ? Url("malsys.curveDesigner.min.js") : Url("malsys.curveDesigner.js");
        public static readonly string malsys_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/malsys.min.js") ? Url("malsys.min.js") : Url("malsys.js");
        public static readonly string MinifyJs_tt = Url("MinifyJs.tt");
        public static readonly string jquery_min_js = Url("jquery.min.js");
        public static readonly string jquery_min_js_map = Url("jquery.min.js.map");
        public static readonly string jquery_prettyPhoto_min_js = Url("jquery.prettyPhoto.min.js");
        public static readonly string jquery_prettyPhoto_min_js_map = Url("jquery.prettyPhoto.min.js.map");
        public static readonly string jquery_textarea_min_js = Url("jquery.textarea.min.js");
        public static readonly string jquery_textarea_min_js_map = Url("jquery.textarea.min.js.map");
        public static readonly string jquery_tmpl_min_js = Url("jquery.tmpl.min.js");
        public static readonly string jquery_unobtrusive_ajax_min_js = Url("jquery.unobtrusive-ajax.min.js");
        public static readonly string jquery_unobtrusive_ajax_min_js_map = Url("jquery.unobtrusive-ajax.min.js.map");
        public static readonly string jquery_validate_min_js = Url("jquery.validate.min.js");
        public static readonly string jquery_validate_min_js_map = Url("jquery.validate.min.js.map");
        public static readonly string jquery_validate_unobtrusive_min_js = Url("jquery.validate.unobtrusive.min.js");
        public static readonly string jquery_validate_unobtrusive_min_js_map = Url("jquery.validate.unobtrusive.min.js.map");
        public static readonly string malsys_curveDesigner_min_js = Url("malsys.curveDesigner.min.js");
        public static readonly string malsys_curveDesigner_min_js_map = Url("malsys.curveDesigner.min.js.map");
        public static readonly string malsys_min_js = Url("malsys.min.js");
        public static readonly string malsys_min_js_map = Url("malsys.min.js.map");
        public static readonly string MinifyJs_log = Url("MinifyJs.log");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class ThreeJs {
            public const string URLPATH = "~/Js/ThreeJs";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string Detector_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Detector.min.js") ? Url("Detector.min.js") : Url("Detector.js");
            public static readonly string Detector_min_js = Url("Detector.min.js");
            public static readonly string Detector_min_js_map = Url("Detector.min.js.map");
            public static readonly string Malsys_three_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Malsys.three.min.js") ? Url("Malsys.three.min.js") : Url("Malsys.three.js");
            public static readonly string Malsys_three_min_js = Url("Malsys.three.min.js");
            public static readonly string Malsys_three_min_js_map = Url("Malsys.three.min.js.map");
            public static readonly string MTLLoader_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/MTLLoader.min.js") ? Url("MTLLoader.min.js") : Url("MTLLoader.js");
            public static readonly string MTLLoader_min_js = Url("MTLLoader.min.js");
            public static readonly string OBJMTLLoader_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/OBJMTLLoader.min.js") ? Url("OBJMTLLoader.min.js") : Url("OBJMTLLoader.js");
            public static readonly string OBJMTLLoader_min_js = Url("OBJMTLLoader.min.js");
            public static readonly string OBJMTLLoader_min_js_map = Url("OBJMTLLoader.min.js.map");
            public static readonly string Stats_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Stats.min.js") ? Url("Stats.min.js") : Url("Stats.js");
            public static readonly string Stats_min_js = Url("Stats.min.js");
            public static readonly string Three_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Three.min.js") ? Url("Three.min.js") : Url("Three.js");
            public static readonly string Three_min_js = Url("Three.min.js");
            public static readonly string Three_min_js_map = Url("Three.min.js.map");
            public static readonly string TrackballControls_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/TrackballControls.min.js") ? Url("TrackballControls.min.js") : Url("TrackballControls.js");
            public static readonly string TrackballControls_min_js = Url("TrackballControls.min.js");
        }
    
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Img {
        public const string URLPATH = "~/Img";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        public static readonly string ajax_loader_gif = Url("ajax-loader.gif");
        public static readonly string designerExample_png = Url("designerExample.png");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class DevDiary {
            public const string URLPATH = "~/Img/DevDiary";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class apng {
                public const string URLPATH = "~/Img/DevDiary/apng";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string Apng_png = Url("Apng.png");
                public static readonly string ApngNoTrim_png = Url("ApngNoTrim.png");
                public static readonly string ApngNoTrimNoAA_png = Url("ApngNoTrimNoAA.png");
                public static readonly string ApngStructure_png = Url("ApngStructure.png");
                public static readonly string ApngTrimNoBg_png = Url("ApngTrimNoBg.png");
                public static readonly string ApngTrimVis_png = Url("ApngTrimVis.png");
                public static readonly string DragonApng_png = Url("DragonApng.png");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class Frames {
                    public const string URLPATH = "~/Img/DevDiary/apng/Frames";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string AFrmae00_12x34_png = Url("AFrmae00-12x34.png");
                    public static readonly string AFrmae01_20x50_png = Url("AFrmae01-20x50.png");
                    public static readonly string AFrmae02_20x66_png = Url("AFrmae02-20x66.png");
                    public static readonly string AFrmae03_20x82_png = Url("AFrmae03-20x82.png");
                    public static readonly string AFrmae04_20x98_png = Url("AFrmae04-20x98.png");
                    public static readonly string AFrmae05_20x114_png = Url("AFrmae05-20x114.png");
                    public static readonly string AFrmae06_20x130_png = Url("AFrmae06-20x130.png");
                    public static readonly string AFrmae07_20x132_png = Url("AFrmae07-20x132.png");
                    public static readonly string AFrmae08_22x134_png = Url("AFrmae08-22x134.png");
                    public static readonly string AFrmae09_22x134_png = Url("AFrmae09-22x134.png");
                    public static readonly string AFrmae10_22x136_png = Url("AFrmae10-22x136.png");
                    public static readonly string AFrmae11_36x136_png = Url("AFrmae11-36x136.png");
                    public static readonly string AFrmae12_48x138_png = Url("AFrmae12-48x138.png");
                    public static readonly string AFrmae13_48x138_png = Url("AFrmae13-48x138.png");
                    public static readonly string AFrmae14_48x140_png = Url("AFrmae14-48x140.png");
                    public static readonly string AFrmae15_50x140_png = Url("AFrmae15-50x140.png");
                    public static readonly string AFrmae16_56x142_png = Url("AFrmae16-56x142.png");
                    public static readonly string AFrmae17_64x144_png = Url("AFrmae17-64x144.png");
                    public static readonly string AFrmae18_66x138_png = Url("AFrmae18-66x138.png");
                    public static readonly string AFrmae19_66x138_png = Url("AFrmae19-66x138.png");
                    public static readonly string AFrmae20_68x138_png = Url("AFrmae20-68x138.png");
                    public static readonly string AFrmae21_82x138_png = Url("AFrmae21-82x138.png");
                    public static readonly string AFrmae22_82x138_png = Url("AFrmae22-82x138.png");
                    public static readonly string AFrmae23_82x138_png = Url("AFrmae23-82x138.png");
                    public static readonly string AFrmae24_84x138_png = Url("AFrmae24-84x138.png");
                    public static readonly string AFrmae25_86x138_png = Url("AFrmae25-86x138.png");
                    public static readonly string AFrmae26_88x138_png = Url("AFrmae26-88x138.png");
                    public static readonly string AFrmae27_90x138_png = Url("AFrmae27-90x138.png");
                    public static readonly string AFrmae28_90x138_png = Url("AFrmae28-90x138.png");
                    public static readonly string AFrmae29_92x138_png = Url("AFrmae29-92x138.png");
                    public static readonly string AFrmae30_94x138_png = Url("AFrmae30-94x138.png");
                    public static readonly string AFrmae31_96x138_png = Url("AFrmae31-96x138.png");
                    public static readonly string AFrmae32_98x138_png = Url("AFrmae32-98x138.png");
                    public static readonly string AFrmae33_100x138_png = Url("AFrmae33-100x138.png");
                    public static readonly string AFrmae34_98x138_png = Url("AFrmae34-98x138.png");
                    public static readonly string AFrmae35_100x138_png = Url("AFrmae35-100x138.png");
                    public static readonly string AFrmae36_102x138_png = Url("AFrmae36-102x138.png");
                    public static readonly string AFrmae37_100x138_png = Url("AFrmae37-100x138.png");
                    public static readonly string AFrmae38_100x138_png = Url("AFrmae38-100x138.png");
                    public static readonly string AFrmae39_102x138_png = Url("AFrmae39-102x138.png");
                    public static readonly string AFrmae40_102x138_png = Url("AFrmae40-102x138.png");
                    public static readonly string AFrmae41_100x138_png = Url("AFrmae41-100x138.png");
                    public static readonly string AFrmae42_100x138_png = Url("AFrmae42-100x138.png");
                    public static readonly string AFrmae43_100x138_png = Url("AFrmae43-100x138.png");
                    public static readonly string AFrmae44_100x138_png = Url("AFrmae44-100x138.png");
                    public static readonly string AFrmae45_100x138_png = Url("AFrmae45-100x138.png");
                }
            
                public static readonly string ImageCoords_png = Url("ImageCoords.png");
                public static readonly string MalsysCoords_png = Url("MalsysCoords.png");
                public static readonly string MinimalPng_png = Url("MinimalPng.png");
                public static readonly string PngChunk_png = Url("PngChunk.png");
                public static readonly string SimplePythagorasAnim_png = Url("SimplePythagorasAnim.png");
                public static readonly string SimplePythagorasAnimFallback_png = Url("SimplePythagorasAnimFallback.png");
                public static readonly string Teaser_png = Url("Teaser.png");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class SvgOptimizations {
                public const string URLPATH = "~/Img/DevDiary/SvgOptimizations";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string CircTile_svgz = Url("CircTile.svgz");
                public static readonly string DekkingsChurch_svgz = Url("DekkingsChurch.svgz");
                public static readonly string HexagosperSig2_svgz = Url("HexagosperSig2.svgz");
                public static readonly string HexagosperSig3_svgz = Url("HexagosperSig3.svgz");
                public static readonly string HexagosperSig4_svgz = Url("HexagosperSig4.svgz");
                public static readonly string HexaGosperSmall_svgz = Url("HexaGosperSmall.svgz");
                public static readonly string HtreeSmall_svgz = Url("HtreeSmall.svgz");
                public static readonly string Plant3_svgz = Url("Plant3.svgz");
                public static readonly string Plant3Oo_svgz = Url("Plant3Oo.svgz");
                public static readonly string SierpinskiTrangle_svgz = Url("SierpinskiTrangle.svgz");
                public static readonly string Tree_svgz = Url("Tree.svgz");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Icons {
            public const string URLPATH = "~/Img/Icons";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string application_resize_full_png = Url("application-resize-full.png");
            public static readonly string cross_png = Url("cross.png");
            public static readonly string exclamation_png = Url("exclamation.png");
            public static readonly string FlipGray_png = Url("FlipGray.png");
            public static readonly string information_png = Url("information.png");
            public static readonly string tick_png = Url("tick.png");
        }
    
        public static readonly string Lilac_DiffWebGL_png = Url("Lilac-DiffWebGL.png");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class prettyPhoto {
            public const string URLPATH = "~/Img/prettyPhoto";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class light_square {
                public const string URLPATH = "~/Img/prettyPhoto/light_square";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string btnNext_png = Url("btnNext.png");
                public static readonly string btnPrevious_png = Url("btnPrevious.png");
                public static readonly string default_thumbnail_gif = Url("default_thumbnail.gif");
                public static readonly string loader_gif = Url("loader.gif");
                public static readonly string sprite_png = Url("sprite.png");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Thesis {
            public const string URLPATH = "~/Img/Thesis";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string _00_png = Url("00.png");
            public static readonly string _05_png = Url("05.png");
            public static readonly string _12_png = Url("12.png");
            public static readonly string _18_png = Url("18.png");
            public static readonly string _30_png = Url("30.png");
            public static readonly string _83_png = Url("83.png");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class thn {
                public const string URLPATH = "~/Img/Thesis/thn";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string _00_png = Url("00.png");
                public static readonly string _05_png = Url("05.png");
                public static readonly string _12_png = Url("12.png");
                public static readonly string _18_png = Url("18.png");
                public static readonly string _30_png = Url("30.png");
                public static readonly string _83_png = Url("83.png");
            }
        
        }
    
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static partial class Bundles
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static partial class Scripts {}
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static partial class Styles {}
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal static class T4MVCHelpers {
	// You can change the ProcessVirtualPath method to modify the path that gets returned to the client.
	// e.g. you can prepend a domain, or append a query string:
	//      return "http://localhost" + path + "?foo=bar";
	private static string ProcessVirtualPathDefault(string virtualPath) {
		// The path that comes in starts with ~/ and must first be made absolute
		string path = VirtualPathUtility.ToAbsolute(virtualPath);

		// Add time substring to file name.
		int dotIndex = path.IndexOf('.');
		if (dotIndex >= 0) {
			string beforeDotExcl = path.Substring(0, dotIndex);
			string afterDotIncl = path.Substring(dotIndex);
			string date = System.IO.File.GetLastAccessTime(HttpContext.Current.Server.MapPath(virtualPath)).ToString("yyMMdd");
			path = beforeDotExcl + "." + date + afterDotIncl;
		}

		return path;
	}

	// Calling ProcessVirtualPath through delegate to allow it to be replaced for unit testing
	public static Func<string, string> ProcessVirtualPath = ProcessVirtualPathDefault;

	// Calling T4Extension.TimestampString through delegate to allow it to be replaced for unit testing and other purposes
	public static Func<string, string> TimestampString = System.Web.Mvc.T4Extensions.TimestampString;

	// Logic to determine if the app is running in production or dev environment
	public static bool IsProduction() { 
		return (HttpContext.Current != null && !HttpContext.Current.IsDebuggingEnabled); 
	}
}





#endregion T4MVC
#pragma warning restore 1591


