\ProvidesPackage{syntaxHighlighters}

\definecolor{clr_code_bg}{rgb}{0.95,0.95,0.95}
\definecolor{clr_keyword}{rgb}{0,0,1}
\definecolor{clr_keyword_ls}{rgb}{0.5,0,0.2}
\definecolor{clr_string}{rgb}{0.64,0.08,0.08}
\definecolor{clr_comment}{rgb}{0,0.5,0}
\definecolor{clr_class}{rgb}{0.17,0.57,0.69}
\definecolor{clr_string}{rgb}{0.64,0.08,0.08}


\newenvironment{btHighlight}[1][]
{\begingroup\tikzset{bt@Highlight@par/.style={#1}}\begin{lrbox}{\@tempboxa}}
{\end{lrbox}\bt@HL@box[bt@Highlight@par]{\@tempboxa}\endgroup}

\newcommand\btHL[1][]{%
	\begin{btHighlight}[#1]\bgroup\aftergroup\bt@HL@endenv%
}
\def\bt@HL@endenv{%
	\end{btHighlight}%   
	\egroup
}
\newcommand{\bt@HL@box}[2][]{%
	\tikz[#1]{%
		\pgfpathrectangle{\pgfpoint{1pt}{0pt}}{\pgfpoint{\wd #2}{\ht #2}}%
		\pgfusepath{use as bounding box}%
		\node[anchor=base west, fill=yellow!40,outer sep=0pt,inner xsep=1pt, inner ysep=0pt, rounded corners=3pt, minimum height=\ht\strutbox+1pt,#1]{\raisebox{1pt}{\strut}\strut\usebox{#2}};
	}%
}


\lstdefinelanguage{Csharp}{
	basicstyle=\footnotesize\ttfamily\consolas,
	keywords={
		abstract,event,new,struct,as,explicit,null,switch,base,extern,object,this,bool,false,operator,throw,
		break,finally,out,true,byte,fixed,override,try,case,float,params,typeof,catch,for,get,private,uint,char,foreach,protected,ulong,
		checked,goto,public,unchecked,class,if,readonly,unsafe,const,implicit,ref,ushort,continue,in,return,using,
		decimal,int,sbyte,set,virtual,default,interface,sealed,volatile,delegate,internal,short,void,do,is,sizeof,while,
		double,lock,stackalloc,else,long,static,enum,namespace,string},
	keywordstyle=\color{clr_keyword},
	classoffset=1,  % new class offset
	morekeywords={ArgumentException,ArgumentNullException,Contract,List,IList,Point3D,Polygon3DTriangulerParameters},
	keywordstyle=\color{clr_class},
	classoffset=0,  % restore default class offset
	sensitive=true,
	comment=[l]{//},
	morecomment=[s]{/*}{*/},
	commentstyle=\color{clr_comment}\itshape,
	string=[b]",
	stringstyle=\color{clr_string},
	extendedchars=true,
	tabsize=4,
	framexleftmargin=4pt,
	frame=lines,
	captionpos=t,
	backgroundcolor=\color{clr_code_bg},
	captionpos=b,
	showstringspaces=false
}

\lstnewenvironment{Csharp}[1][]{\lstset{language=Csharp,#1}}{}


\lstdefinelanguage{Lsystem}{
	basicstyle=\ttfamily\footnotesize\consolas,
	keywords={abstract,all,as,component,configuration,connect,consider,container,default,extends,fun,interpret,
		let,lsystem,nothing,or,process,return,rewrite,set,symbols,this,to,typeof,use,virtual,weight,with,where},
	keywordstyle=\color{clr_keyword_ls}\bfseries,
	literate={-}{{-}}1,  % to avoid replacment of - to "minus"
	comment=[l]{//},
	morecomment=[s]{/*}{*/},
	commentstyle=\color{clr_comment}\itshape,
	extendedchars=true,
	tabsize=4,
	frame=lines,
	captionpos=t,
	backgroundcolor=\color{clr_code_bg},
	showstringspaces=false,
	framexleftmargin=4pt,
	%escapechar=`,
	captionpos=b,
    moredelim=**[is][\btHL]{@}{@}
}

\lstnewenvironment{LsystemBreak}[1][]{\lstset{language=Lsystem,#1}}{}

\lstnewenvironment{Lsystem}[1][]%
{ % http://tex.stackexchange.com/questions/10141/how-to-prevent-lstlisting-from-splitting-code-between-pages
	\noindent
	\minipage{\linewidth}%
	\vspace{0.5\baselineskip}
	\lstset{language=Lsystem,#1}
}
{\endminipage}

\lstnewenvironment{Lsystem50}[1][]%
{ % http://tex.stackexchange.com/questions/10141/how-to-prevent-lstlisting-from-splitting-code-between-pages
	\noindent
	\minipage{0.49\linewidth}%
	\vspace{0.5\baselineskip}
	\lstset{language=Lsystem,#1}
}
{\endminipage}


\newcommand{\grammarquant}[1]{\bfseries{#1}}

\lstdefinelanguage{Grammar}{
	basicstyle=\ttfamily\footnotesize\consolas,
	literate=
		{?}{{\grammarquant{?}}}1
		{+}{{\grammarquant{+}}}1
		{*}{{\grammarquant{*}}}1,
	extendedchars=true,
	string=[b]',
	stringstyle=\color{clr_string},
	tabsize=4,
	frame=lines,
	captionpos=t,
	backgroundcolor=\color{clr_code_bg},
	showstringspaces=false,
	framexleftmargin=8pt,
	escapechar=`,
	captionpos=b
}

\lstnewenvironment{Grammar}[1][]%
{ % http://tex.stackexchange.com/questions/10141/how-to-prevent-lstlisting-from-splitting-code-between-pages
	\noindent
	\minipage{\linewidth}%
	\vspace{0.5\baselineskip}
	\lstset{language=Grammar,#1}}
{\endminipage}


\lstdefinelanguage{Fsharp}{
	basicstyle=\footnotesize\ttfamily\consolas,
	keywords={let, new, match, with, rec, open, module, namespace, type, of, member, and, for, in, do, begin, end, fun, function, try, mutable, if, then, else},
	keywordstyle=\color{clr_keyword},
	classoffset=1,  % new class offset
	morekeywords={rule}, % fslex
	keywordstyle=\color{clr_keyword},
	classoffset=2,  % new class offset
	morekeywords={ConstantDefinition,FunctionDefinition,ImmutableListPos,IFunctionStatement,ResizeArray},
	keywordstyle=\color{clr_class},
	classoffset=3,  % new class offset
	morekeywords={LET,EQUALS,SEMI,LBRACE,RBRACE,RETURN,FUN,ID}, %fsyacc
	keywordstyle=\color{clr_string},
	classoffset=0,  % restore default class offset
	sensitive=true,
	comment=[l]{//},
	morecomment=[s]{(*}{*)},
	commentstyle=\color{clr_comment}\itshape,
	string=[b]",
	morestring=[b]',
	stringstyle=\color{clr_string},
	extendedchars=true,
	tabsize=4,
	framexleftmargin=4pt,
	frame=lines,
	captionpos=t,
	backgroundcolor=\color{clr_code_bg},
	captionpos=b,
	showstringspaces=false
}

\lstnewenvironment{Fsharp}[1][]%
{ % http://tex.stackexchange.com/questions/10141/how-to-prevent-lstlisting-from-splitting-code-between-pages
	\noindent
	\minipage{\linewidth}%
	\vspace{0.5\baselineskip}
	\lstset{language=Fsharp,#1}}
{\endminipage}














